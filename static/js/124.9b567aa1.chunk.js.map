{"version":3,"file":"static/js/124.9b567aa1.chunk.js","mappings":"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","sources":["game/blackjack/cards.jsx","game/blackjack/core/Deck.jsx","game/blackjack/core/Player.jsx","game/blackjack/core/Crupier.jsx","game/blackjack/blackJack.jsx"],"sourcesContent":["import AS from \"../blackjack/img/AS.png\";\r\nimport AD from \"../blackjack/img/AD.png\";\r\nimport AC from \"../blackjack/img/AC.png\";\r\nimport AH from \"../blackjack/img/AH.png\";\r\n\r\nimport S2 from \"../blackjack/img/2S.png\";\r\nimport C2 from \"../blackjack/img/2C.png\";\r\nimport H2 from \"../blackjack/img/2H.png\";\r\nimport D2 from \"../blackjack/img/2D.png\";\r\n\r\nimport S3 from \"../blackjack/img/3S.png\";\r\nimport D3 from \"../blackjack/img/3D.png\";\r\nimport H3 from \"../blackjack/img/3H.png\";\r\nimport C3 from \"../blackjack/img/3C.png\";\r\n\r\nimport S4 from \"../blackjack/img/4S.png\";\r\nimport D4 from \"../blackjack/img/4D.png\";\r\nimport H4 from \"../blackjack/img/4H.png\";\r\nimport C4 from \"../blackjack/img/4C.png\";\r\n\r\nimport S5 from \"../blackjack/img/5S.png\";\r\nimport D5 from \"../blackjack/img/5D.png\";\r\nimport H5 from \"../blackjack/img/5H.png\";\r\nimport C5 from \"../blackjack/img/5C.png\";\r\n\r\nimport S6 from \"../blackjack/img/6S.png\";\r\nimport D6 from \"../blackjack/img/6D.png\";\r\nimport H6 from \"../blackjack/img/6H.png\";\r\nimport C6 from \"../blackjack/img/6C.png\";\r\n\r\nimport S7 from \"../blackjack/img/7S.png\";\r\nimport D7 from \"../blackjack/img/7D.png\";\r\nimport H7 from \"../blackjack/img/7H.png\";\r\nimport C7 from \"../blackjack/img/7C.png\";\r\n\r\nimport S8 from \"../blackjack/img/8S.png\";\r\nimport D8 from \"../blackjack/img/8D.png\";\r\nimport H8 from \"../blackjack/img/8H.png\";\r\nimport C8 from \"../blackjack/img/8C.png\";\r\n\r\nimport S9 from \"../blackjack/img/9S.png\";\r\nimport D9 from \"../blackjack/img/9D.png\";\r\nimport H9 from \"../blackjack/img/9H.png\";\r\nimport C9 from \"../blackjack/img/9C.png\";\r\n\r\nimport S0 from \"../blackjack/img/0S.png\";\r\nimport D0 from \"../blackjack/img/0D.png\";\r\nimport H0 from \"../blackjack/img/0H.png\";\r\nimport C0 from \"../blackjack/img/0C.png\";\r\n\r\nimport JS from \"../blackjack/img/JS.png\";\r\nimport JD from \"../blackjack/img/JD.png\";\r\nimport JH from \"../blackjack/img/JH.png\";\r\nimport JC from \"../blackjack/img/JC.png\";\r\n\r\nimport QS from \"../blackjack/img/QS.png\";\r\nimport QD from \"../blackjack/img/QD.png\";\r\nimport QH from \"../blackjack/img/QH.png\";\r\nimport QC from \"../blackjack/img/QC.png\";\r\n\r\nimport KS from \"../blackjack/img/KS.png\";\r\nimport KD from \"../blackjack/img/KD.png\";\r\nimport KH from \"../blackjack/img/KH.png\";\r\nimport KC from \"../blackjack/img/KC.png\";\r\n\r\n\r\nconst cards = [\r\n\r\n  { image: AS, suit: 'SPADES', value: 'ACE' },\r\n  { image: AD, suit: 'DIAMONDS', value: 'ACE' },\r\n  { image: AC, suit: 'CLUBS', value: 'ACE' },\r\n  { image: AH, suit: 'HEARTS', value: 'ACE' },\r\n\r\n  { image: S2, suit: 'SPADES', value: '2' },\r\n  { image: D2, suit: 'DIAMONDS', value: '2' },\r\n  { image: C2, suit: 'CLUBS', value: '2' },\r\n  { image: H2, suit: 'HEARTS', value: '2' },\r\n\r\n  { image: S3, suit: 'SPADES', value: '3' },\r\n  { image: D3, suit: 'DIAMONDS', value: '3' },\r\n  { image: C3, suit: 'CLUBS', value: '3' },\r\n  { image: H3, suit: 'HEARTS', value: '3' },\r\n\r\n  { image: S4, suit: 'SPADES', value: '4' },\r\n  { image: D4, suit: 'DIAMONDS', value: '4' },\r\n  { image: C4, suit: 'CLUBS', value: '4' },\r\n  { image: H4, suit: 'HEARTS', value: '4' },\r\n  \r\n  { image: S5, suit: 'SPADES', value: '5' },\r\n  { image: D5, suit: 'DIAMONDS', value: '5' },\r\n  { image: C5, suit: 'CLUBS', value: '5' },\r\n  { image: H5, suit: 'HEARTS', value: '5' },\r\n\r\n  { image: S6, suit: 'SPADES', value: '6' },\r\n  { image: D6, suit: 'DIAMONDS', value: '6' },\r\n  { image: C6, suit: 'CLUBS', value: '6' },\r\n  { image: H6, suit: 'HEARTS', value: '6' },\r\n\r\n  { image: S7, suit: 'SPADES', value: '7' },\r\n  { image: D7, suit: 'DIAMONDS', value: '7' },\r\n  { image: C7, suit: 'CLUBS', value: '7' },\r\n  { image: H7, suit: 'HEARTS', value: '7' },\r\n\r\n  { image: S8, suit: 'SPADES', value: '8' },\r\n  { image: D8, suit: 'DIAMONDS', value: '8' },\r\n  { image: C8, suit: 'CLUBS', value: '8' },\r\n  { image: H8, suit: 'HEARTS', value: '8' },\r\n\r\n  { image: S9, suit: 'SPADES', value: '9' },\r\n  { image: D9, suit: 'DIAMONDS', value: '9' },\r\n  { image: C9, suit: 'CLUBS', value: '9' },\r\n  { image: H9, suit: 'HEARTS', value: '9' },\r\n\r\n  { image: S0, suit: 'SPADES', value: '10' },\r\n  { image: D0, suit: 'DIAMONDS', value: '10' },\r\n  { image: C0, suit: 'CLUBS', value: '10' },\r\n  { image: H0, suit: 'HEARTS', value: '10' },\r\n\r\n  { image: JS, suit: 'SPADES', value: 'JACK' },\r\n  { image: JD, suit: 'DIAMONDS', value: 'JACK' },\r\n  { image: JC, suit: 'CLUBS', value: 'JACK' },\r\n  { image: JH, suit: 'HEARTS', value: 'JACK' },\r\n\r\n  { image: QS, suit: 'SPADES', value: 'QUEEN' },\r\n  { image: QD, suit: 'DIAMONDS', value: 'QUEEN' },\r\n  { image: QC, suit: 'CLUBS', value: 'QUEEN' },\r\n  { image: QH, suit: 'HEARTS', value: 'QUEEN' },\r\n\r\n  { image: KS, suit: 'SPADES', value: 'KING' },\r\n  { image: KD, suit: 'DIAMONDS', value: 'KING' },\r\n  { image: KC, suit: 'CLUBS', value: 'KING' },\r\n  { image: KH, suit: 'HEARTS', value: 'KING' },\r\n];\r\n\r\nexport default cards;\r\n","// Deck.js\r\nimport React from \"react\";\r\nimport cards from \"../cards\";\r\n\r\nexport const createDeck = () => {\r\n  const deck = [];\r\n  for (let i = 0; i < cards.length; i++) {\r\n    deck.push(cards[i]);\r\n  }\r\n  return shuffleSortDeck(deck);\r\n};\r\n\r\nexport const shuffleDeck = (deck) => {\r\n  for (let i = 0; i < 1000; i++) {\r\n    let location1 = Math.floor(Math.random() * deck.length);\r\n    let location2 = Math.floor(Math.random() * deck.length);\r\n    let tmp = deck[location1];\r\n    deck[location1] = deck[location2];\r\n    deck[location2] = tmp;\r\n  }\r\n  return deck;\r\n};\r\n\r\nconst shuffleSortDeck = (deck) => {\r\n  return deck.sort(() => Math.random() - 0.5);\r\n};\r\n\r\nconst Deck = ({ cards }) => (\r\n  <div>\r\n    <h2>Deck Cards</h2>\r\n    <div className=\"flex wrap\">\r\n      {cards.map((card, index) => (\r\n        <div key={index}>\r\n          <img\r\n            style={{ width: \"70px\" }}\r\n            src={card.image}\r\n            alt={`${card.value} of ${card.suit}`}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Deck;\r\n","// Player.js\r\nimport React from \"react\";\r\nimport './Style.css'\r\n\r\nconst Player = ({ cards, points }) => (\r\n  <div className=\"Player\">\r\n    <h2>Player Cards ({points} points):</h2>\r\n    <div className=\"flex-column\">\r\n      {cards.map((card, index) => (\r\n        <div key={index}>\r\n          <img\r\n            className=\"card-size\"\r\n            src={card.image}\r\n            alt={`${card.value} of ${card.suit}`}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Player;\r\n","// Crupier.js\r\nimport React from \"react\";\r\nimport EMPTY from '../img/empty-card.png';\r\nimport './Style.css'\r\n\r\nconst Crupier = ({ cards, points, revealCard }) => (\r\n  <div className=\"Crupier\">\r\n    <h2>Curpier Cards ({points} points):</h2>\r\n    <div className=\"flex-column\">\r\n      {cards.map((card, index) => (\r\n        <div key={index}>\r\n          <img\r\n            className=\"card-size\"\r\n            src={index === cards.length - 1 && !revealCard ? EMPTY : card.image}\r\n            alt={index === cards.length - 1 && !revealCard ? 'Hidden Card' : `${card.value} of ${card.suit}`}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Crupier;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Deck, { createDeck, shuffleDeck } from \"./core/Deck\";\r\nimport Player from \"./core/Player\";\r\nimport Crupier from \"./core/Crupier\";\r\nimport './blackJack.css'\r\n\r\nconst BlackJack = () => {\r\n  const [deck, setDeck] = useState([]);\r\n  const [playerDeck, setPlayerDeck] = useState([]);\r\n  const [crupierDeck, setCrupierDeck] = useState([]);\r\n  const [isStart, setStart] = useState(false);\r\n  const [revealCrupierCard, setRevealCrupierCard] = useState(false);\r\n  const [playerPoints, setPlayerPoints] = useState(0);\r\n  const [crupierPoints, setCrupierPoints] = useState(0);\r\n  const [gameMessage, setGameMessage] = useState(\"\");\r\n\r\n  const updatePlayerPoints = useCallback((cards) => {\r\n    let points = calculatePoints(cards);\r\n    setPlayerPoints(points);\r\n  }, []);\r\n\r\n  const updateCrupierPoints = useCallback((cards, revealCard) => {\r\n    let points = calculatePoints(revealCard ? cards : cards.slice(0, -1));\r\n    setCrupierPoints(points);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n      updatePlayerPoints(playerDeck);\r\n  }, [playerDeck, updatePlayerPoints]);\r\n\r\n  useEffect(() => {\r\n      updateCrupierPoints(crupierDeck, revealCrupierCard);\r\n  }, [crupierDeck, revealCrupierCard, updateCrupierPoints]);\r\n\r\n  useEffect(() => {\r\n      if (playerPoints > 21) {\r\n        checkResults(playerPoints, crupierPoints);\r\n      }\r\n  }, [playerPoints, crupierPoints]);\r\n\r\n  useEffect(() => {\r\n      if (crupierPoints === 21 ) {\r\n        checkResults(playerPoints, crupierPoints);\r\n      } \r\n  }, [crupierPoints, playerPoints]);\r\n\r\n  const resetGame = () => {\r\n    setStart(false);\r\n    setRevealCrupierCard(false);\r\n    setPlayerDeck([]);\r\n    setCrupierDeck([]);\r\n    setDeck([]);\r\n    setPlayerPoints(0);\r\n    setCrupierPoints(0);\r\n    setGameMessage(\"\");\r\n  };\r\n\r\n  function dealCards(deck) {\r\n    let playerCards = [deck[0], deck[2]];\r\n    let crupierCards = [deck[1], deck[3]];\r\n    // if (calculatePoints(crupierCards) === 21) {\r\n    //   setGameMessage(\"Crupier ma Blackjack!\");\r\n      \r\n    // }\r\n    setPlayerDeck(playerCards);\r\n    setCrupierDeck(crupierCards);\r\n    let newDeck = deck.slice(4);\r\n    setDeck(newDeck);\r\n    updatePlayerPoints(playerCards);\r\n  }\r\n\r\n  const handleHit = () => {\r\n    if (isStart && playerPoints < 21) {\r\n      let newPlayerCards = [...playerDeck, deck[0]];\r\n      setPlayerDeck(newPlayerCards);\r\n      let newDeck = deck.slice(1);\r\n      setDeck(newDeck);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (playerPoints > 21) {\r\n      checkResults(playerPoints, crupierPoints);\r\n    }\r\n}, [playerPoints, crupierPoints]);\r\n\r\n\r\n\r\nconst handleStand = () => {\r\n  if (isStart) {\r\n    setRevealCrupierCard(true);\r\n    setCrupierPoints(crupierPoints); // Ustaw aktualną liczbę punktów krupiera\r\n\r\n    // Ta część logiki zostanie przeniesiona do useEffect\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  if (revealCrupierCard) {\r\n    setTimeout(() => {\r\n      let crupierPointsCopy = crupierPoints;\r\n      let newCrupierDeck = crupierDeck.slice(); // Skopiuj oryginalną talię krupiera\r\n\r\n      while (crupierPointsCopy < 17) {\r\n        let card = deck.splice(0, 1); // Usuń pierwszą kartę z głównej talii i zwróć ją jako nową tablicę\r\n        newCrupierDeck = [...newCrupierDeck, ...card]; // Dodaj nową kartę do oryginalnej talii krupiera za pomocą operatora spread\r\n        // lub newCrupierDeck = newCrupierDeck.concat(card); // Dodaj nową kartę do oryginalnej talii krupiera za pomocą metody concat\r\n        setCrupierDeck(newCrupierDeck); // Uaktualnij talie krupiera\r\n        setDeck(deck); // Uaktualnij główną talię\r\n\r\n        crupierPointsCopy = calculatePoints(newCrupierDeck); // Oblicz nową sumę punktów krupiera\r\n        setCrupierPoints(crupierPointsCopy);\r\n      }\r\n\r\n      // Ustaw nową sumę punktów krupiera\r\n      \r\n\r\n      // Po zakończeniu pętli, sprawdź wynik\r\n      checkResults(playerPoints, crupierPointsCopy);\r\n    }, 100);\r\n  }\r\n}, [revealCrupierCard, crupierDeck, deck, crupierPoints, playerPoints]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const handleStand = () => {\r\n  //   if (isStart) {\r\n  //     setRevealCrupierCard(true);\r\n  //     setCrupierPoints(crupierPoints);\r\n  \r\n  //     setTimeout(() => {\r\n  //       // Początkowo używamy wartości zmiennych, które można modyfikować\r\n  //       let crupierPointsCopy = crupierPoints;\r\n  //       let newCrupierDeck = [...crupierDeck];\r\n  \r\n  //       // Pętla while dla rysowania kart krupiera\r\n  //       while (crupierPointsCopy < 17) {\r\n  //         console.log('Drawing card for crupier...');\r\n  //         newCrupierDeck = [...newCrupierDeck, deck[0]]; // Dodaj nową kartę do talii krupiera\r\n  //         setCrupierDeck(newCrupierDeck); // Uaktualnij talie krupiera\r\n  //         setDeck(deck.slice(1)); // Usuń kartę z głównej talii\r\n  \r\n  //         crupierPointsCopy = calculatePoints(newCrupierDeck); // Oblicz nową sumę punktów krupiera\r\n  //       }\r\n  \r\n  //       // Ustaw nową sumę punktów krupiera\r\n  //       setCrupierPoints(crupierPointsCopy);\r\n  \r\n  //       // Po zakończeniu pętli, sprawdź wynik\r\n  //       checkResults(playerPoints, crupierPointsCopy);\r\n  //     }, 100);\r\n  //   }\r\n  // };\r\n  \r\n  \r\n\r\n \r\n\r\n\r\n  const calculatePoints = (cards) => {\r\n    let points = 0;\r\n    let numAces = 0;\r\n\r\n    cards.forEach((card) => {\r\n      if (card.value === \"ACE\") {\r\n        numAces++;\r\n        points += 11;\r\n      } else if ([\"KING\", \"QUEEN\", \"JACK\"].includes(card.value)) {\r\n        points += 10;\r\n      } else {\r\n        points += parseInt(card.value);\r\n      }\r\n    });\r\n\r\n    while (numAces > 0 && points > 21) {\r\n      points -= 10;\r\n      numAces--;\r\n    }\r\n\r\n    return points;\r\n  };\r\n\r\n \r\n\r\n  const checkResults = (playerPoints, crupierPoints) => {\r\n    let resultMessage = \"\";\r\n\r\n    switch (true) {\r\n      case playerPoints > 21:\r\n        resultMessage = \"Gracz przegrał ma więcej niż 21 punktów!\";\r\n        break;\r\n      case playerPoints <= 21 &&\r\n        (crupierPoints > 21 ||\r\n          (crupierPoints <= 21 && playerPoints > crupierPoints)):\r\n        resultMessage = \"Gracz wygrywa!\";\r\n        break;\r\n      case crupierPoints > 21:\r\n        resultMessage = \"Crupier przekroczył 21 punktów.\";\r\n        break;\r\n      case playerPoints === 21 && crupierPoints === 21:\r\n        resultMessage = \"DOUBLE BLACKJACK\";\r\n        break;\r\n      case playerPoints === 21:\r\n        resultMessage = \"Gracz wygrywa! Blackjack!\";\r\n        break;\r\n      case crupierPoints === 21:\r\n        resultMessage = \"Crupier wygrywa! Blackjack!\";\r\n        break;\r\n      case playerPoints > crupierPoints &&\r\n        playerPoints < 21 &&\r\n        crupierPoints < 21:\r\n        resultMessage = \"Gracz wygrywa!\";\r\n        break;\r\n      case playerPoints < crupierPoints:\r\n        resultMessage = \"Crupier wygrywa!\";\r\n        break;\r\n      case playerPoints === crupierPoints:\r\n        resultMessage = \"REMIS\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setGameMessage(resultMessage);\r\n  };\r\n\r\n  const Start = () => {\r\n    setStart(true);\r\n    setGameMessage(\"\");\r\n    const newDeck = shuffleDeck(createDeck());\r\n      setDeck(newDeck);\r\n      dealCards(newDeck);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-blackjack\">\r\n\r\n      {gameMessage && <div className=\"msg-blackjack\">{gameMessage}</div>}\r\n\r\n      <div className=\"game-menu\">\r\n      <div>{!isStart && (\r\n        <button className=\"btn\" onClick={Start}>START</button>\r\n      )}\r\n        {gameMessage && (\r\n        <button className=\"btn\" onClick={resetGame}>RESTART</button>\r\n      )}\r\n      </div>\r\n        \r\n      </div>\r\n\r\n      \r\n\r\n      {isStart && (\r\n        <>\r\n          <Player cards={playerDeck} points={playerPoints} />\r\n          <div>\r\n            <button className=\"btn\" onClick={handleHit} disabled={playerPoints >= 21}>\r\n              Hit\r\n            </button>\r\n            <button\r\n              onClick={handleStand}\r\n              className=\"btn\"\r\n              // disabled={playerPoints >= 21}\r\n            >\r\n              Stand\r\n            </button>\r\n          </div>\r\n          <Crupier\r\n            cards={crupierDeck}\r\n            points={crupierPoints}\r\n            revealCard={revealCrupierCard}\r\n          />\r\n          {/* <Deck cards={deck} /> */}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlackJack;\r\n"],"names":["image","suit","value","S5","D5","C5","H5","S6","D6","C6","H6","S7","D7","C7","H7","S8","D8","C8","H8","S9","D9","C9","H9","S0","D0","C0","H0","JS","JD","JC","JH","QS","QD","QC","QH","KS","KD","KH","shuffleSortDeck","deck","sort","Math","random","_ref","cards","points","_jsxs","className","children","_jsx","map","card","index","src","alt","concat","revealCard","length","EMPTY","BlackJack","setDeck","useState","playerDeck","setPlayerDeck","crupierDeck","setCrupierDeck","isStart","setStart","revealCrupierCard","setRevealCrupierCard","playerPoints","setPlayerPoints","crupierPoints","setCrupierPoints","gameMessage","setGameMessage","updatePlayerPoints","useCallback","calculatePoints","updateCrupierPoints","slice","useEffect","checkResults","setTimeout","crupierPointsCopy","newCrupierDeck","splice","numAces","forEach","includes","parseInt","resultMessage","onClick","Start","newDeck","i","location1","floor","location2","tmp","shuffleDeck","createDeck","push","playerCards","crupierCards","dealCards","resetGame","_Fragment","Player","handleHit","newPlayerCards","disabled","handleStand","Crupier"],"sourceRoot":""}